/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2002 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   aci
 *      Instance Name:  ram_256x16
 *      Words:          256
 *      Word Width:     16
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        slow
 *      Delays:		max
 *
 *      Creation Date:  2002-01-13 20:12:23Z
 *      Version:        2000Q3V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "slow";
DESIGN              "ram_256x16";

CELLDATA
area                   : 69085.762;
default_max_transition : 4.000;
ENDCELLDATA

PORTDATA
Q[15:0] : CAP(0.020), MAXCAP(2.220);
A[7:0] : CAP(0.052);
CEN : CAP(0.014);
CLK : CAP(0.130), MAXTRANS(4.000);
D[15:0] : CAP(0.005);
WEN : CAP(0.015);
OEN : CAP(0.010);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(ram_256x16_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004");
               index_2 ("1000, 1001, 1002, 1003, 1004");
        }
	lu_table_template(ram_256x16_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004");
               index_2 ("1000, 1001, 1002, 1003, 1004");
        }
	lu_table_template(ram_256x16_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004");
        }
ENDGLOBAL


ARCDATA
tch_tas:
			rise_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.435, 0.442, 0.458, 0.489, 0.508", \
			  "0.370, 0.378, 0.393, 0.425, 0.444", \
			  "0.241, 0.249, 0.265, 0.296, 0.315", \
			  "0.000, 0.000, 0.007, 0.038, 0.058", \
			  "0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.435, 0.442, 0.458, 0.489, 0.508", \
			  "0.370, 0.378, 0.393, 0.425, 0.444", \
			  "0.241, 0.249, 0.265, 0.296, 0.315", \
			  "0.000, 0.000, 0.007, 0.038, 0.058", \
			  "0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tah:
			rise_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.124, 0.117, 0.101, 0.070, 0.050", \
			  "0.189, 0.181, 0.165, 0.134, 0.115", \
			  "0.317, 0.310, 0.294, 0.263, 0.244", \
			  "0.575, 0.567, 0.552, 0.520, 0.501", \
			  "0.736, 0.728, 0.712, 0.681, 0.662" \
			)
			}
			fall_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.124, 0.117, 0.101, 0.070, 0.050", \
			  "0.189, 0.181, 0.165, 0.134, 0.115", \
			  "0.317, 0.310, 0.294, 0.263, 0.244", \
			  "0.575, 0.567, 0.552, 0.520, 0.501", \
			  "0.736, 0.728, 0.712, 0.681, 0.662" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcs:
			rise_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.499, 0.510, 0.533, 0.684, 0.779", \
			  "0.435, 0.446, 0.468, 0.620, 0.715", \
			  "0.306, 0.317, 0.340, 0.491, 0.586", \
			  "0.048, 0.060, 0.082, 0.234, 0.329", \
			  "0.000, 0.000, 0.000, 0.073, 0.168" \
			)
			}
			fall_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.499, 0.510, 0.533, 0.684, 0.779", \
			  "0.435, 0.446, 0.468, 0.620, 0.715", \
			  "0.306, 0.317, 0.340, 0.491, 0.586", \
			  "0.048, 0.060, 0.082, 0.234, 0.329", \
			  "0.000, 0.000, 0.000, 0.073, 0.168" \
			)
			}
ENDARCDATA

ARCDATA
tch_tch:
			rise_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.015, 0.004, 0.000, 0.000, 0.000", \
			  "0.144, 0.133, 0.110, 0.065, 0.037", \
			  "0.401, 0.390, 0.368, 0.322, 0.294", \
			  "0.562, 0.551, 0.528, 0.483, 0.455" \
			)
			}
			fall_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.015, 0.004, 0.000, 0.000, 0.000", \
			  "0.144, 0.133, 0.110, 0.065, 0.037", \
			  "0.401, 0.390, 0.368, 0.322, 0.294", \
			  "0.562, 0.551, 0.528, 0.483, 0.455" \
			)
			}
ENDARCDATA

ARCDATA
tch_tds:
			rise_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.286, 0.300, 0.335, 0.541, 0.670", \
			  "0.222, 0.235, 0.270, 0.477, 0.605", \
			  "0.093, 0.106, 0.142, 0.348, 0.477", \
			  "0.000, 0.000, 0.000, 0.090, 0.219", \
			  "0.000, 0.000, 0.000, 0.000, 0.058" \
			)
			}
			fall_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.286, 0.300, 0.335, 0.541, 0.670", \
			  "0.222, 0.235, 0.270, 0.477, 0.605", \
			  "0.093, 0.106, 0.142, 0.348, 0.477", \
			  "0.000, 0.000, 0.000, 0.090, 0.219", \
			  "0.000, 0.000, 0.000, 0.000, 0.058" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdh:
			rise_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.030, 0.000, 0.000, 0.000, 0.000", \
			  "0.159, 0.108, 0.005, 0.000, 0.000", \
			  "0.417, 0.365, 0.262, 0.174, 0.140", \
			  "0.577, 0.526, 0.423, 0.335, 0.301" \
			)
			}
			fall_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.030, 0.000, 0.000, 0.000, 0.000", \
			  "0.159, 0.108, 0.005, 0.000, 0.000", \
			  "0.417, 0.365, 0.262, 0.174, 0.140", \
			  "0.577, 0.526, 0.423, 0.335, 0.301" \
			)
			}
ENDARCDATA

ARCDATA
tch_tws:
			rise_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.498, 0.541, 0.626, 0.796, 0.903", \
			  "0.434, 0.477, 0.562, 0.732, 0.839", \
			  "0.305, 0.348, 0.433, 0.603, 0.710", \
			  "0.092, 0.111, 0.176, 0.346, 0.452", \
			  "0.092, 0.111, 0.150, 0.313, 0.419" \
			)
			}
			fall_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.498, 0.541, 0.626, 0.796, 0.903", \
			  "0.434, 0.477, 0.562, 0.732, 0.839", \
			  "0.305, 0.348, 0.433, 0.603, 0.710", \
			  "0.092, 0.111, 0.176, 0.346, 0.452", \
			  "0.092, 0.111, 0.150, 0.313, 0.419" \
			)
			}
ENDARCDATA

ARCDATA
tch_twh:
			rise_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.126, 0.083, 0.000, 0.000, 0.000", \
			  "0.383, 0.340, 0.255, 0.145, 0.097", \
			  "0.544, 0.501, 0.416, 0.306, 0.258" \
			)
			}
			fall_constraint(ram_256x16_constraint_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.200, 0.600, 1.400, 3.000, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.126, 0.083, 0.000, 0.000, 0.000", \
			  "0.383, 0.340, 0.255, 0.145, 0.097", \
			  "0.544, 0.501, 0.416, 0.306, 0.258" \
			)
			}
ENDARCDATA

ARCDATA
period_tcyc:
			rise_constraint(scalar) {
				values ("1.639")
			}
			fall_constraint(scalar) {
				values ("1.639")
			}
ENDARCDATA

ARCDATA
tpw_tckl:
			rise_constraint(scalar) {
				values ("0.260")
			}
			fall_constraint(scalar) {
				values ("0.260")
			}
ENDARCDATA

ARCDATA
tpw_tckh:
			rise_constraint(scalar) {
				values ("0.183")
			}
			fall_constraint(scalar) {
				values ("0.183")
			}
ENDARCDATA

ARCDATA
dly_tya:
			cell_rise(ram_256x16_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ( \
			  "1.742, 1.893, 2.050, 2.359, 2.976", \
			  "1.806, 1.958, 2.115, 2.423, 3.040", \
			  "1.935, 2.086, 2.243, 2.552, 3.169", \
			  "2.192, 2.344, 2.501, 2.809, 3.426", \
			  "2.353, 2.505, 2.662, 2.970, 3.587" \
			)
			}
			rise_transition(ram_256x16_load_template) {
			index_1 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ("0.092, 0.430, 0.779, 1.467, 2.841")
			}
			cell_fall(ram_256x16_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ( \
			  "1.743, 1.828, 1.916, 2.089, 2.434", \
			  "1.808, 1.893, 1.981, 2.153, 2.499", \
			  "1.937, 2.021, 2.109, 2.282, 2.627", \
			  "2.194, 2.279, 2.367, 2.539, 2.885", \
			  "2.355, 2.440, 2.528, 2.700, 3.046" \
			)
			}
			fall_transition(ram_256x16_load_template) {
			index_1 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ("0.049, 0.212, 0.381, 0.712, 1.375")
			}
ENDARCDATA

ARCDATA
dly_tlzl:
			cell_rise(ram_256x16_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ( \
			  "0.857, 0.910, 1.067, 1.376, 1.993", \
			  "0.887, 0.961, 1.118, 1.426, 2.043", \
			  "0.947, 1.063, 1.220, 1.528, 2.145", \
			  "1.115, 1.266, 1.424, 1.732, 2.349", \
			  "1.242, 1.394, 1.551, 1.859, 2.476" \
			)
			}
			rise_transition(ram_256x16_load_template) {
			index_1 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ("0.092, 0.430, 0.779, 1.467, 2.841")
			}
			cell_fall(ram_256x16_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ( \
			  "0.857, 0.857, 0.867, 1.040, 1.385", \
			  "0.887, 0.887, 0.918, 1.091, 1.436", \
			  "0.947, 0.947, 1.020, 1.193, 1.538", \
			  "1.066, 1.136, 1.224, 1.396, 1.742", \
			  "1.178, 1.263, 1.351, 1.524, 1.869" \
			)
			}
			fall_transition(ram_256x16_load_template) {
			index_1 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ("0.049, 0.212, 0.381, 0.712, 1.375")
			}
ENDARCDATA

ARCDATA
dly_tlzh:
			cell_rise(ram_256x16_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ( \
			  "0.857, 0.910, 1.067, 1.376, 1.993", \
			  "0.887, 0.961, 1.118, 1.426, 2.043", \
			  "0.947, 1.063, 1.220, 1.528, 2.145", \
			  "1.115, 1.266, 1.424, 1.732, 2.349", \
			  "1.242, 1.394, 1.551, 1.859, 2.476" \
			)
			}
			rise_transition(ram_256x16_load_template) {
			index_1 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ("0.092, 0.430, 0.779, 1.467, 2.841")
			}
			cell_fall(ram_256x16_delay_template) {
			index_1 ("0.200, 0.600, 1.400, 3.000, 4.000");
			index_2 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ( \
			  "0.857, 0.857, 0.867, 1.040, 1.385", \
			  "0.887, 0.887, 0.918, 1.091, 1.436", \
			  "0.947, 0.947, 1.020, 1.193, 1.538", \
			  "1.066, 1.136, 1.224, 1.396, 1.742", \
			  "1.178, 1.263, 1.351, 1.524, 1.869" \
			)
			}
			fall_transition(ram_256x16_load_template) {
			index_1 ("0.000, 0.270, 0.550, 1.100, 2.200");
			values ("0.049, 0.212, 0.381, 0.712, 1.375")
			}
ENDARCDATA
ENDTIMINGDATA
ENDMODELDATA
